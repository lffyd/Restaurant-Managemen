<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fyd.cygl.dao.OrderDetailMapper" >
  <resultMap id="BaseResultMap" type="com.fyd.cygl.entity.OrderDetail" >
    <id column="Odid" property="odid" jdbcType="INTEGER" />
    <result column="Number" property="number" jdbcType="INTEGER" />
    <result column="Oid" property="oid" jdbcType="VARCHAR" />
    <result column="Fname" property="fname" jdbcType="VARCHAR" />
    <result column="Price" property="price" jdbcType="DOUBLE" />
    <result column="Tips" property="tips" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Odid, Number, Oid, Fname, Price, Tips
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fyd.cygl.entity.OrderDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orderdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orderdetail
    where Odid = #{odid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orderdetail
    where Odid = #{odid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fyd.cygl.entity.OrderDetailExample" >
    delete from orderdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fyd.cygl.entity.OrderDetail" >
    insert into orderdetail (Odid, Number, Oid, 
      Fname, Price, Tips)
    values (#{odid,jdbcType=INTEGER}, #{number,jdbcType=INTEGER}, #{oid,jdbcType=VARCHAR}, 
      #{fname,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{tips,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fyd.cygl.entity.OrderDetail" >
    insert into orderdetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="odid != null" >
        Odid,
      </if>
      <if test="number != null" >
        Number,
      </if>
      <if test="oid != null" >
        Oid,
      </if>
      <if test="fname != null" >
        Fname,
      </if>
      <if test="price != null" >
        Price,
      </if>
      <if test="tips != null" >
        Tips,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="odid != null" >
        #{odid,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        #{oid,jdbcType=VARCHAR},
      </if>
      <if test="fname != null" >
        #{fname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="tips != null" >
        #{tips,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fyd.cygl.entity.OrderDetailExample" resultType="java.lang.Integer" >
    select count(*) from orderdetail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orderdetail
    <set >
      <if test="record.odid != null" >
        Odid = #{record.odid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        Number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.oid != null" >
        Oid = #{record.oid,jdbcType=VARCHAR},
      </if>
      <if test="record.fname != null" >
        Fname = #{record.fname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        Price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.tips != null" >
        Tips = #{record.tips,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orderdetail
    set Odid = #{record.odid,jdbcType=INTEGER},
      Number = #{record.number,jdbcType=INTEGER},
      Oid = #{record.oid,jdbcType=VARCHAR},
      Fname = #{record.fname,jdbcType=VARCHAR},
      Price = #{record.price,jdbcType=DOUBLE},
      Tips = #{record.tips,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fyd.cygl.entity.OrderDetail" >
    update orderdetail
    <set >
      <if test="number != null" >
        Number = #{number,jdbcType=INTEGER},
      </if>
      <if test="oid != null" >
        Oid = #{oid,jdbcType=VARCHAR},
      </if>
      <if test="fname != null" >
        Fname = #{fname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        Price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="tips != null" >
        Tips = #{tips,jdbcType=VARCHAR},
      </if>
    </set>
    where Odid = #{odid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fyd.cygl.entity.OrderDetail" >
    update orderdetail
    set Number = #{number,jdbcType=INTEGER},
      Oid = #{oid,jdbcType=VARCHAR},
      Fname = #{fname,jdbcType=VARCHAR},
      Price = #{price,jdbcType=DOUBLE},
      Tips = #{tips,jdbcType=VARCHAR}
    where Odid = #{odid,jdbcType=INTEGER}
  </update>
</mapper>